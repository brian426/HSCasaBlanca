/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ComponenteMantenimiento;

import ComponenteAdministracion.BDEstadoHabitacion;
import ComponenteAdministracion.BDHabitacion;
import ComponenteClases.EstadoHabitacion;
import ComponenteClases.Habitacion;
import ComponenteClases.JPanelConFondo;
import javax.swing.JOptionPane;

/**
 *
 * @author Toshib
 */
public class FrmMantenimientoHabitacion extends javax.swing.JFrame {

    /**
     * Creates new form FrmMantenimientoHabitacion
     */
    public FrmMantenimientoHabitacion() {
        initComponents();
        this.setLocationRelativeTo(null);
        //   String name=lbl201.getName();
        ((JPanelConFondo) panel101).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel102).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel103).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel104).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel105).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel106).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel107).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel108).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel109).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel201).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel202).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel203).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel204).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel205).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel206).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel207).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel208).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel209).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel301).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel302).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel303).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel304).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel305).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel306).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel307).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel308).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel309).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel401).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel402).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel403).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel404).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel405).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel406).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel407).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel408).setImagen("/ComponenteImagenes/Disponible.png");
        ((JPanelConFondo) panel409).setImagen("/ComponenteImagenes/Disponible.png");
        //  lbl201.setText(lbl201.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        panel101 = new JPanelConFondo();
        jLabel1 = new javax.swing.JLabel();
        panel104 = new JPanelConFondo();
        jLabel2 = new javax.swing.JLabel();
        panel102 = new JPanelConFondo();
        jLabel4 = new javax.swing.JLabel();
        panel103 = new JPanelConFondo();
        jLabel5 = new javax.swing.JLabel();
        panel106 = new JPanelConFondo();
        jLabel6 = new javax.swing.JLabel();
        panel107 = new JPanelConFondo();
        jLabel7 = new javax.swing.JLabel();
        panel105 = new JPanelConFondo();
        jLabel8 = new javax.swing.JLabel();
        panel109 = new JPanelConFondo();
        jLabel9 = new javax.swing.JLabel();
        panel108 = new JPanelConFondo();
        jLabel10 = new javax.swing.JLabel();
        CBEstado101 = new javax.swing.JComboBox();
        CBEstado103 = new javax.swing.JComboBox();
        CBEstado102 = new javax.swing.JComboBox();
        CBEstado104 = new javax.swing.JComboBox();
        CBEstado105 = new javax.swing.JComboBox();
        CBEstado106 = new javax.swing.JComboBox();
        CBEstado107 = new javax.swing.JComboBox();
        CBEstado109 = new javax.swing.JComboBox();
        CBEstado108 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        jSeparator16 = new javax.swing.JSeparator();
        jSeparator17 = new javax.swing.JSeparator();
        panel201 = new JPanelConFondo();
        jLabel3 = new javax.swing.JLabel();
        panel202 = new JPanelConFondo();
        jLabel12 = new javax.swing.JLabel();
        panel205 = new JPanelConFondo();
        jLabel16 = new javax.swing.JLabel();
        panel204 = new JPanelConFondo();
        jLabel11 = new javax.swing.JLabel();
        panel206 = new JPanelConFondo();
        jLabel14 = new javax.swing.JLabel();
        panel209 = new JPanelConFondo();
        jLabel17 = new javax.swing.JLabel();
        panel208 = new JPanelConFondo();
        jLabel18 = new javax.swing.JLabel();
        panel207 = new JPanelConFondo();
        jLabel15 = new javax.swing.JLabel();
        panel203 = new JPanelConFondo();
        jLabel13 = new javax.swing.JLabel();
        CBEstado203 = new javax.swing.JComboBox();
        CBEstado201 = new javax.swing.JComboBox();
        CBEstado202 = new javax.swing.JComboBox();
        CBEstado205 = new javax.swing.JComboBox();
        CBEstado204 = new javax.swing.JComboBox();
        CBEstado207 = new javax.swing.JComboBox();
        CBEstado206 = new javax.swing.JComboBox();
        CBEstado209 = new javax.swing.JComboBox();
        CBEstado208 = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jSeparator18 = new javax.swing.JSeparator();
        jSeparator19 = new javax.swing.JSeparator();
        jSeparator20 = new javax.swing.JSeparator();
        jSeparator21 = new javax.swing.JSeparator();
        jSeparator22 = new javax.swing.JSeparator();
        jSeparator23 = new javax.swing.JSeparator();
        jSeparator24 = new javax.swing.JSeparator();
        jSeparator25 = new javax.swing.JSeparator();
        panel301 = new JPanelConFondo();
        jLabel19 = new javax.swing.JLabel();
        panel304 = new JPanelConFondo();
        jLabel20 = new javax.swing.JLabel();
        panel302 = new JPanelConFondo();
        jLabel21 = new javax.swing.JLabel();
        panel303 = new JPanelConFondo();
        jLabel22 = new javax.swing.JLabel();
        panel306 = new JPanelConFondo();
        jLabel23 = new javax.swing.JLabel();
        panel307 = new JPanelConFondo();
        jLabel24 = new javax.swing.JLabel();
        panel305 = new JPanelConFondo();
        jLabel25 = new javax.swing.JLabel();
        panel309 = new JPanelConFondo();
        jLabel26 = new javax.swing.JLabel();
        panel308 = new JPanelConFondo();
        jLabel27 = new javax.swing.JLabel();
        CBEstado302 = new javax.swing.JComboBox();
        CBEstado301 = new javax.swing.JComboBox();
        CBEstado303 = new javax.swing.JComboBox();
        CBEstado304 = new javax.swing.JComboBox();
        CBEstado305 = new javax.swing.JComboBox();
        CBEstado306 = new javax.swing.JComboBox();
        CBEstado309 = new javax.swing.JComboBox();
        CBEstado307 = new javax.swing.JComboBox();
        CBEstado308 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jSeparator26 = new javax.swing.JSeparator();
        jSeparator27 = new javax.swing.JSeparator();
        jSeparator28 = new javax.swing.JSeparator();
        jSeparator29 = new javax.swing.JSeparator();
        jSeparator30 = new javax.swing.JSeparator();
        jSeparator31 = new javax.swing.JSeparator();
        jSeparator32 = new javax.swing.JSeparator();
        jSeparator33 = new javax.swing.JSeparator();
        panel401 = new JPanelConFondo();
        jLabel28 = new javax.swing.JLabel();
        panel404 = new JPanelConFondo();
        jLabel29 = new javax.swing.JLabel();
        panel402 = new JPanelConFondo();
        jLabel30 = new javax.swing.JLabel();
        panel403 = new JPanelConFondo();
        jLabel31 = new javax.swing.JLabel();
        panel406 = new JPanelConFondo();
        jLabel32 = new javax.swing.JLabel();
        panel407 = new JPanelConFondo();
        jLabel33 = new javax.swing.JLabel();
        panel405 = new JPanelConFondo();
        jLabel34 = new javax.swing.JLabel();
        panel409 = new JPanelConFondo();
        jLabel35 = new javax.swing.JLabel();
        panel408 = new JPanelConFondo();
        jLabel36 = new javax.swing.JLabel();
        CBEstado401 = new javax.swing.JComboBox();
        CBEstado403 = new javax.swing.JComboBox();
        CBEstado402 = new javax.swing.JComboBox();
        CBEstado404 = new javax.swing.JComboBox();
        CBEstado406 = new javax.swing.JComboBox();
        CBEstado407 = new javax.swing.JComboBox();
        CBEstado405 = new javax.swing.JComboBox();
        CBEstado409 = new javax.swing.JComboBox();
        CBEstado408 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(70, 99, 138));

        jPanel1.setBackground(new java.awt.Color(247, 254, 255));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator8.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator8.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator9.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);

        panel101.setToolTipText("");
        panel101.setPreferredSize(new java.awt.Dimension(48, 48));
        panel101.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel1.setText("101");
        panel101.add(jLabel1, new java.awt.GridBagConstraints());

        panel104.setPreferredSize(new java.awt.Dimension(48, 48));
        panel104.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel2.setText("104");
        panel104.add(jLabel2, new java.awt.GridBagConstraints());

        panel102.setPreferredSize(new java.awt.Dimension(48, 48));
        panel102.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel4.setText("102");
        panel102.add(jLabel4, new java.awt.GridBagConstraints());

        panel103.setPreferredSize(new java.awt.Dimension(48, 48));
        panel103.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel5.setText("103");
        panel103.add(jLabel5, new java.awt.GridBagConstraints());

        panel106.setPreferredSize(new java.awt.Dimension(48, 48));
        panel106.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel6.setText("106");
        panel106.add(jLabel6, new java.awt.GridBagConstraints());

        panel107.setPreferredSize(new java.awt.Dimension(48, 48));
        panel107.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel7.setText("107");
        panel107.add(jLabel7, new java.awt.GridBagConstraints());

        panel105.setPreferredSize(new java.awt.Dimension(48, 48));
        panel105.setLayout(new java.awt.GridBagLayout());

        jLabel8.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel8.setText("105");
        panel105.add(jLabel8, new java.awt.GridBagConstraints());

        panel109.setPreferredSize(new java.awt.Dimension(48, 48));
        panel109.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel9.setText("109");
        panel109.add(jLabel9, new java.awt.GridBagConstraints());

        panel108.setPreferredSize(new java.awt.Dimension(48, 48));
        panel108.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel10.setText("108");
        panel108.add(jLabel10, new java.awt.GridBagConstraints());

        CBEstado101.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado101.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado101ActionPerformed(evt);
            }
        });

        CBEstado103.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado103.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado103ActionPerformed(evt);
            }
        });

        CBEstado102.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado102.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado102ActionPerformed(evt);
            }
        });

        CBEstado104.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado104.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado104ActionPerformed(evt);
            }
        });

        CBEstado105.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado105.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado105ActionPerformed(evt);
            }
        });

        CBEstado106.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado106.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado106ActionPerformed(evt);
            }
        });

        CBEstado107.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado107.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado107ActionPerformed(evt);
            }
        });

        CBEstado109.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado109.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado109ActionPerformed(evt);
            }
        });

        CBEstado108.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado108.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado108ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(CBEstado101, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(panel101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(panel104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(panel107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(CBEstado104, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(CBEstado107, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(96, 96, 96)
                                        .addComponent(panel105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(CBEstado105, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(panel108, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(CBEstado108, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(86, 86, 86)
                                    .addComponent(panel106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(88, 88, 88))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(CBEstado106, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(25, 25, 25)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(panel109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(CBEstado109, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(panel102, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(CBEstado102, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(panel103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CBEstado103, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel102, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(CBEstado101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado102, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4)
                            .addComponent(jSeparator5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(panel104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(panel105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBEstado104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBEstado105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 49, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(panel106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CBEstado106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(panel107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel108, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CBEstado108, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBEstado109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jTabbedPane1.addTab("Primer Nivel", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator10.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator10.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator11.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator11.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator12.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator12.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator12.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator13.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator13.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator14.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator14.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator14.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator15.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator15.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator15.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator16.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator16.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator16.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator17.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator17.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator17.setOrientation(javax.swing.SwingConstants.VERTICAL);

        panel201.setToolTipText("22:00 - 04:00");
        panel201.setPreferredSize(new java.awt.Dimension(48, 48));
        panel201.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel3.setText("201");
        panel201.add(jLabel3, new java.awt.GridBagConstraints());

        panel202.setPreferredSize(new java.awt.Dimension(48, 48));
        panel202.setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel12.setText("202");
        panel202.add(jLabel12, new java.awt.GridBagConstraints());

        panel205.setPreferredSize(new java.awt.Dimension(48, 48));
        panel205.setLayout(new java.awt.GridBagLayout());

        jLabel16.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel16.setText("205");
        panel205.add(jLabel16, new java.awt.GridBagConstraints());

        panel204.setPreferredSize(new java.awt.Dimension(48, 48));
        panel204.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel11.setText("204");
        panel204.add(jLabel11, new java.awt.GridBagConstraints());

        panel206.setPreferredSize(new java.awt.Dimension(48, 48));
        panel206.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel14.setText("206");
        panel206.add(jLabel14, new java.awt.GridBagConstraints());

        panel209.setPreferredSize(new java.awt.Dimension(48, 48));
        panel209.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel17.setText("209");
        panel209.add(jLabel17, new java.awt.GridBagConstraints());

        panel208.setPreferredSize(new java.awt.Dimension(48, 48));
        panel208.setLayout(new java.awt.GridBagLayout());

        jLabel18.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel18.setText("208");
        panel208.add(jLabel18, new java.awt.GridBagConstraints());

        panel207.setPreferredSize(new java.awt.Dimension(48, 48));
        panel207.setLayout(new java.awt.GridBagLayout());

        jLabel15.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel15.setText("207");
        panel207.add(jLabel15, new java.awt.GridBagConstraints());

        panel203.setPreferredSize(new java.awt.Dimension(48, 48));
        panel203.setLayout(new java.awt.GridBagLayout());

        jLabel13.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel13.setText("203");
        panel203.add(jLabel13, new java.awt.GridBagConstraints());

        CBEstado203.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado203.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado203ActionPerformed(evt);
            }
        });

        CBEstado201.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado201.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado201ActionPerformed(evt);
            }
        });

        CBEstado202.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado202.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado202ActionPerformed(evt);
            }
        });

        CBEstado205.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado205.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado205ActionPerformed(evt);
            }
        });

        CBEstado204.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado204.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado204ActionPerformed(evt);
            }
        });

        CBEstado207.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado207.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado207ActionPerformed(evt);
            }
        });

        CBEstado206.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado206.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado206ActionPerformed(evt);
            }
        });

        CBEstado209.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado209.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado209ActionPerformed(evt);
            }
        });

        CBEstado208.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));
        CBEstado208.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBEstado208ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator11)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(CBEstado201, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(panel201, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)))
                        .addGap(62, 62, 62)
                        .addComponent(CBEstado202, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator17, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(46, 46, 46)
                                            .addComponent(CBEstado204, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(panel204, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(78, 78, 78)))
                                    .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(45, 45, 45)
                                            .addComponent(CBEstado207, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(panel207, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(78, 78, 78)))
                                    .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(panel205, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(CBEstado208, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(CBEstado205, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(panel208, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(panel202, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(panel206, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(panel209, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(CBEstado209, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(panel203, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(CBEstado203, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(CBEstado206, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
            .addComponent(jSeparator10)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator15, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(panel201, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(panel203, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CBEstado201, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CBEstado203, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jSeparator17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel202, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CBEstado202, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel204, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel205, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel206, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CBEstado205, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBEstado204, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBEstado206, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(panel207, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado207, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(panel208, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(CBEstado208, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(panel209, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado209, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Segundo Nivel", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator18.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator18.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator19.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator19.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator20.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator20.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator20.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator21.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator21.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator21.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator22.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator22.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator22.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator23.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator23.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator23.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator24.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator24.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator24.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator25.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator25.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator25.setOrientation(javax.swing.SwingConstants.VERTICAL);

        panel301.setToolTipText("22:00 - 04:00");
        panel301.setPreferredSize(new java.awt.Dimension(48, 48));
        panel301.setLayout(new java.awt.GridBagLayout());

        jLabel19.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel19.setText("301");
        panel301.add(jLabel19, new java.awt.GridBagConstraints());

        panel304.setPreferredSize(new java.awt.Dimension(48, 48));
        panel304.setLayout(new java.awt.GridBagLayout());

        jLabel20.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel20.setText("304");
        panel304.add(jLabel20, new java.awt.GridBagConstraints());

        panel302.setPreferredSize(new java.awt.Dimension(48, 48));
        panel302.setLayout(new java.awt.GridBagLayout());

        jLabel21.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel21.setText("302");
        panel302.add(jLabel21, new java.awt.GridBagConstraints());

        panel303.setPreferredSize(new java.awt.Dimension(48, 48));
        panel303.setLayout(new java.awt.GridBagLayout());

        jLabel22.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel22.setText("303");
        panel303.add(jLabel22, new java.awt.GridBagConstraints());

        panel306.setPreferredSize(new java.awt.Dimension(48, 48));
        panel306.setLayout(new java.awt.GridBagLayout());

        jLabel23.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel23.setText("306");
        panel306.add(jLabel23, new java.awt.GridBagConstraints());

        panel307.setPreferredSize(new java.awt.Dimension(48, 48));
        panel307.setLayout(new java.awt.GridBagLayout());

        jLabel24.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel24.setText("307");
        panel307.add(jLabel24, new java.awt.GridBagConstraints());

        panel305.setPreferredSize(new java.awt.Dimension(48, 48));
        panel305.setLayout(new java.awt.GridBagLayout());

        jLabel25.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel25.setText("305");
        panel305.add(jLabel25, new java.awt.GridBagConstraints());

        panel309.setPreferredSize(new java.awt.Dimension(48, 48));
        panel309.setLayout(new java.awt.GridBagLayout());

        jLabel26.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel26.setText("309");
        panel309.add(jLabel26, new java.awt.GridBagConstraints());

        panel308.setPreferredSize(new java.awt.Dimension(48, 48));
        panel308.setLayout(new java.awt.GridBagLayout());

        jLabel27.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel27.setText("308");
        panel308.add(jLabel27, new java.awt.GridBagConstraints());

        CBEstado302.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado301.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado303.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado304.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado305.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado306.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado309.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado307.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado308.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator18)
            .addComponent(jSeparator19)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(panel301, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(panel304, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(panel307, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(CBEstado301, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(CBEstado304, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(CBEstado307, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jSeparator20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(panel305, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(CBEstado305, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                                .addComponent(jSeparator21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jSeparator24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(panel308, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(CBEstado308, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator22, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado306, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(panel306, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado309, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(panel309, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(panel302, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(CBEstado302, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(jSeparator23, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado303, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(panel303, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(36, 36, 36))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator23, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator25, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel301, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel302, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel303, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CBEstado302, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBEstado301, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBEstado303, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator20)
                                    .addComponent(jSeparator21, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(panel305, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(panel304, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBEstado304, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBEstado305, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panel306, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado306, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator18, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator22, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator24, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(panel307, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado307, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(panel308, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado308, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(panel309, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado309, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Tercer Nivel", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator26.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator26.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator27.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator27.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator28.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator28.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator28.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator29.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator29.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator29.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator30.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator30.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator30.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator31.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator31.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator31.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator32.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator32.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator32.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator33.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator33.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator33.setOrientation(javax.swing.SwingConstants.VERTICAL);

        panel401.setToolTipText("22:00 - 04:00");
        panel401.setPreferredSize(new java.awt.Dimension(48, 48));
        panel401.setLayout(new java.awt.GridBagLayout());

        jLabel28.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel28.setText("401");
        panel401.add(jLabel28, new java.awt.GridBagConstraints());

        panel404.setPreferredSize(new java.awt.Dimension(48, 48));
        panel404.setLayout(new java.awt.GridBagLayout());

        jLabel29.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel29.setText("404");
        panel404.add(jLabel29, new java.awt.GridBagConstraints());

        panel402.setPreferredSize(new java.awt.Dimension(48, 48));
        panel402.setLayout(new java.awt.GridBagLayout());

        jLabel30.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel30.setText("402");
        panel402.add(jLabel30, new java.awt.GridBagConstraints());

        panel403.setPreferredSize(new java.awt.Dimension(48, 48));
        panel403.setLayout(new java.awt.GridBagLayout());

        jLabel31.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel31.setText("403");
        panel403.add(jLabel31, new java.awt.GridBagConstraints());

        panel406.setPreferredSize(new java.awt.Dimension(48, 48));
        panel406.setLayout(new java.awt.GridBagLayout());

        jLabel32.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel32.setText("406");
        panel406.add(jLabel32, new java.awt.GridBagConstraints());

        panel407.setPreferredSize(new java.awt.Dimension(48, 48));
        panel407.setLayout(new java.awt.GridBagLayout());

        jLabel33.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel33.setText("407");
        panel407.add(jLabel33, new java.awt.GridBagConstraints());

        panel405.setPreferredSize(new java.awt.Dimension(48, 48));
        panel405.setLayout(new java.awt.GridBagLayout());

        jLabel34.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel34.setText("405");
        panel405.add(jLabel34, new java.awt.GridBagConstraints());

        panel409.setPreferredSize(new java.awt.Dimension(48, 48));
        panel409.setLayout(new java.awt.GridBagLayout());

        jLabel35.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel35.setText("409");
        panel409.add(jLabel35, new java.awt.GridBagConstraints());

        panel408.setPreferredSize(new java.awt.Dimension(48, 48));
        panel408.setLayout(new java.awt.GridBagLayout());

        jLabel36.setFont(new java.awt.Font("Bernard MT Condensed", 0, 14)); // NOI18N
        jLabel36.setText("408");
        panel408.add(jLabel36, new java.awt.GridBagConstraints());

        CBEstado401.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado403.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado402.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado404.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado406.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado407.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado405.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado409.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        CBEstado408.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disponible", "Ocupada", "Reservada", "Limpieza", "Mantenimiento" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator26)
            .addComponent(jSeparator27)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(panel401, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(CBEstado401, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(CBEstado404, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(CBEstado407, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(panel404, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(panel407, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jSeparator28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(92, 92, 92)
                                        .addComponent(panel405, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(CBEstado405, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addComponent(jSeparator29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jSeparator32, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(CBEstado408, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(92, 92, 92)
                                        .addComponent(panel408, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator30, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(panel409, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(panel406, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado406, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado409, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator33, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(panel402, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(CBEstado402, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator31, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(panel403, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado403, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(37, 37, 37))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator31, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator33, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel401, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel402, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel403, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(CBEstado401, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado403, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CBEstado402, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator28)
                                    .addComponent(jSeparator29, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(panel406, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(panel405, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBEstado406, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBEstado405, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panel404, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado404, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator26, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator30, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator32, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(panel407, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado407, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(panel408, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado408, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(panel409, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CBEstado409, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Cuarto Nivel", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CBEstado101ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado101ActionPerformed
        // TODO add your handling code here:
        try {
            if (String.valueOf(CBEstado101.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(101, 1);
                if (hab) {((JPanelConFondo) panel101).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado101.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(101, 2);
                if (hab) {
                      ((JPanelConFondo) panel101).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado101.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(101, 3);
                if (hab) {
                      ((JPanelConFondo) panel101).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado101.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(101, 4);
                if (hab) {
                      ((JPanelConFondo) panel101).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado101.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(101, 5);
                if (hab) {
                      ((JPanelConFondo) panel101).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado101ActionPerformed

    private void CBEstado102ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado102ActionPerformed
        // TODO add your handling code here:
        try {
            if (String.valueOf(CBEstado102.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(102, 1);
                if (hab) {((JPanelConFondo) panel102).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado102.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(102, 2);
                if (hab) {
                      ((JPanelConFondo) panel102).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado102.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(102, 3);
                if (hab) {
                      ((JPanelConFondo) panel102).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado102.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(102, 4);
                if (hab) {
                      ((JPanelConFondo) panel102).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado102.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(102, 5);
                if (hab) {
                      ((JPanelConFondo) panel102).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado102ActionPerformed

    private void CBEstado103ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado103ActionPerformed
        // TODO add your handling code here:
         try {
            if (String.valueOf(CBEstado103.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(103, 1);
                if (hab) {((JPanelConFondo) panel103).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado103.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(103, 2);
                if (hab) {
                      ((JPanelConFondo) panel103).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado103.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(103, 3);
                if (hab) {
                      ((JPanelConFondo) panel103).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado103.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(103, 4);
                if (hab) {
                      ((JPanelConFondo) panel103).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado103.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(103, 5);
                if (hab) {
                      ((JPanelConFondo) panel103).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado103ActionPerformed

    private void CBEstado104ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado104ActionPerformed
        // TODO add your handling code here:
          try {
            if (String.valueOf(CBEstado104.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(104, 1);
                if (hab) {((JPanelConFondo) panel104).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado104.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(104, 2);
                if (hab) {
                      ((JPanelConFondo) panel104).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado104.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(104, 3);
                if (hab) {
                      ((JPanelConFondo) panel104).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado104.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(104, 4);
                if (hab) {
                      ((JPanelConFondo) panel104).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado104.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(104, 5);
                if (hab) {
                      ((JPanelConFondo) panel104).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado104ActionPerformed

    private void CBEstado105ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado105ActionPerformed
        // TODO add your handling code here:
        try {
            if (String.valueOf(CBEstado105.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(105, 1);
                if (hab) {((JPanelConFondo) panel105).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado105.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(105, 2);
                if (hab) {
                      ((JPanelConFondo) panel105).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado105.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(105, 3);
                if (hab) {
                      ((JPanelConFondo) panel105).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado105.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(105, 4);
                if (hab) {
                      ((JPanelConFondo) panel105).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado105.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(105, 5);
                if (hab) {
                      ((JPanelConFondo) panel105).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado105ActionPerformed

    private void CBEstado106ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado106ActionPerformed
        // TODO add your handling code here:
         try {
            if (String.valueOf(CBEstado106.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(106, 1);
                if (hab) {((JPanelConFondo) panel106).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado106.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(106, 2);
                if (hab) {
                      ((JPanelConFondo) panel106).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado106.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(106, 3);
                if (hab) {
                      ((JPanelConFondo) panel106).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado106.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(106, 4);
                if (hab) {
                      ((JPanelConFondo) panel106).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado106.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(106, 5);
                if (hab) {
                      ((JPanelConFondo) panel106).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado106ActionPerformed

    private void CBEstado107ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado107ActionPerformed
        // TODO add your handling code here:
         try {
            if (String.valueOf(CBEstado107.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(107, 1);
                if (hab) {((JPanelConFondo) panel107).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado107.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(107, 2);
                if (hab) {
                      ((JPanelConFondo) panel107).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado107.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(107, 3);
                if (hab) {
                      ((JPanelConFondo) panel107).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado107.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(107, 4);
                if (hab) {
                      ((JPanelConFondo) panel107).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado107.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(107, 5);
                if (hab) {
                      ((JPanelConFondo) panel107).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado107ActionPerformed

    private void CBEstado108ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado108ActionPerformed
        // TODO add your handling code here:
         try {
            if (String.valueOf(CBEstado108.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(108, 1);
                if (hab) {((JPanelConFondo) panel108).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado108.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(108, 2);
                if (hab) {
                      ((JPanelConFondo) panel108).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado108.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(108, 3);
                if (hab) {
                      ((JPanelConFondo) panel108).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado108.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(108, 4);
                if (hab) {
                      ((JPanelConFondo) panel108).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado108.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(108, 5);
                if (hab) {
                      ((JPanelConFondo) panel108).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado108ActionPerformed

    private void CBEstado109ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado109ActionPerformed
        // TODO add your handling code here:
          try {
            if (String.valueOf(CBEstado109.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(109, 1);
                if (hab) {((JPanelConFondo) panel109).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado109.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(109, 2);
                if (hab) {
                      ((JPanelConFondo) panel109).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado109.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(109, 3);
                if (hab) {
                      ((JPanelConFondo) panel109).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado109.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(109, 4);
                if (hab) {
                      ((JPanelConFondo) panel109).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado109.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(109, 5);
                if (hab) {
                      ((JPanelConFondo) panel109).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado109ActionPerformed

    private void CBEstado201ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado201ActionPerformed
        // TODO add your handling code here:
          try {
            if (String.valueOf(CBEstado201.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(201, 1);
                if (hab) {((JPanelConFondo) panel201).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado201.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(201, 2);
                if (hab) {
                      ((JPanelConFondo) panel201).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado201.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(201, 3);
                if (hab) {
                      ((JPanelConFondo) panel201).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado201.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(201, 4);
                if (hab) {
                      ((JPanelConFondo) panel201).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado201.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(201, 5);
                if (hab) {
                      ((JPanelConFondo) panel201).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado201ActionPerformed

    private void CBEstado202ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado202ActionPerformed
        // TODO add your handling code here:
           try {
            if (String.valueOf(CBEstado202.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(202, 1);
                if (hab) {((JPanelConFondo) panel202).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado202.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(202, 2);
                if (hab) {
                      ((JPanelConFondo) panel202).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado202.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(202, 3);
                if (hab) {
                      ((JPanelConFondo) panel202).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado202.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(202, 4);
                if (hab) {
                      ((JPanelConFondo) panel202).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado202.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(202, 5);
                if (hab) {
                      ((JPanelConFondo) panel202).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado202ActionPerformed

    private void CBEstado203ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado203ActionPerformed
        // TODO add your handling code here:
           try {
            if (String.valueOf(CBEstado203.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(203, 1);
                if (hab) {((JPanelConFondo) panel203).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado203.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(203, 2);
                if (hab) {
                      ((JPanelConFondo) panel203).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado203.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(203, 3);
                if (hab) {
                      ((JPanelConFondo) panel203).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado203.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(203, 4);
                if (hab) {
                      ((JPanelConFondo) panel203).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado203.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(203, 5);
                if (hab) {
                      ((JPanelConFondo) panel203).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado203ActionPerformed

    private void CBEstado204ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado204ActionPerformed
        // TODO add your handling code here:
           try {
            if (String.valueOf(CBEstado204.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(204, 1);
                if (hab) {((JPanelConFondo) panel204).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado204.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(204, 2);
                if (hab) {
                      ((JPanelConFondo) panel204).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado204.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(204, 3);
                if (hab) {
                      ((JPanelConFondo) panel204).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado204.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(204, 4);
                if (hab) {
                      ((JPanelConFondo) panel204).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado204.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(204, 5);
                if (hab) {
                      ((JPanelConFondo) panel204).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado204ActionPerformed

    private void CBEstado205ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado205ActionPerformed
        // TODO add your handling code here:
          try {
            if (String.valueOf(CBEstado205.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(205, 1);
                if (hab) {((JPanelConFondo) panel205).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado205.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(205, 2);
                if (hab) {
                      ((JPanelConFondo) panel205).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado205.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(205, 3);
                if (hab) {
                      ((JPanelConFondo) panel205).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado205.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(205, 4);
                if (hab) {
                      ((JPanelConFondo) panel205).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado205.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(205, 5);
                if (hab) {
                      ((JPanelConFondo) panel205).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado205ActionPerformed

    private void CBEstado206ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado206ActionPerformed
        // TODO add your handling code here:
         try {
            if (String.valueOf(CBEstado206.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(206, 1);
                if (hab) {((JPanelConFondo) panel206).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado206.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(206, 2);
                if (hab) {
                      ((JPanelConFondo) panel206).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado206.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(206, 3);
                if (hab) {
                      ((JPanelConFondo) panel206).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado206.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(206, 4);
                if (hab) {
                      ((JPanelConFondo) panel206).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado206.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(206, 5);
                if (hab) {
                      ((JPanelConFondo) panel206).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado206ActionPerformed

    private void CBEstado207ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado207ActionPerformed
        // TODO add your handling code here:
          try {
            if (String.valueOf(CBEstado207.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(207, 1);
                if (hab) {((JPanelConFondo) panel207).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado207.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(207, 2);
                if (hab) {
                      ((JPanelConFondo) panel207).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado207.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(207, 3);
                if (hab) {
                      ((JPanelConFondo) panel207).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado207.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(207, 4);
                if (hab) {
                      ((JPanelConFondo) panel207).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado207.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(207, 5);
                if (hab) {
                      ((JPanelConFondo) panel207).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado207ActionPerformed

    private void CBEstado208ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado208ActionPerformed
        // TODO add your handling code here:
           try {
            if (String.valueOf(CBEstado208.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(208, 1);
                if (hab) {((JPanelConFondo) panel208).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado208.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(208, 2);
                if (hab) {
                      ((JPanelConFondo) panel208).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado208.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(208, 3);
                if (hab) {
                      ((JPanelConFondo) panel208).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado208.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(208, 4);
                if (hab) {
                      ((JPanelConFondo) panel208).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado208.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(208, 5);
                if (hab) {
                      ((JPanelConFondo) panel208).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado208ActionPerformed

    private void CBEstado209ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBEstado209ActionPerformed
        // TODO add your handling code here:
          try {
            if (String.valueOf(CBEstado209.getSelectedItem()).equalsIgnoreCase("Disponible")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(209, 1);
                if (hab) {((JPanelConFondo) panel209).setImagen("/ComponenteImagenes/Disponible.png"); } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");}
              
            } else if (String.valueOf(CBEstado209.getSelectedItem()).equalsIgnoreCase("Ocupada")) {
                boolean hab=BDHabitacion.actualizarHabitacionEstado(209, 2);
                if (hab) {
                      ((JPanelConFondo) panel209).setImagen("/ComponenteImagenes/Ocupada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado209.getSelectedItem()).equalsIgnoreCase("Reservada")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(209, 3);
                if (hab) {
                      ((JPanelConFondo) panel209).setImagen("/ComponenteImagenes/Reservada.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado209.getSelectedItem()).equalsIgnoreCase("Limpieza")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(209, 4);
                if (hab) {
                      ((JPanelConFondo) panel209).setImagen("/ComponenteImagenes/Limpieza.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            } else if (String.valueOf(CBEstado209.getSelectedItem()).equalsIgnoreCase("Mantenimiento")) {
                 boolean hab=BDHabitacion.actualizarHabitacionEstado(209, 5);
                if (hab) {
                      ((JPanelConFondo) panel209).setImagen("/ComponenteImagenes/Mantenimiento.png");
                } else {
                    JOptionPane.showMessageDialog(null, "Lo sentimos, no se pudo actualizar el estado");
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CBEstado209ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMantenimientoHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMantenimientoHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMantenimientoHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMantenimientoHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMantenimientoHabitacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CBEstado101;
    private javax.swing.JComboBox CBEstado102;
    private javax.swing.JComboBox CBEstado103;
    private javax.swing.JComboBox CBEstado104;
    private javax.swing.JComboBox CBEstado105;
    private javax.swing.JComboBox CBEstado106;
    private javax.swing.JComboBox CBEstado107;
    private javax.swing.JComboBox CBEstado108;
    private javax.swing.JComboBox CBEstado109;
    private javax.swing.JComboBox CBEstado201;
    private javax.swing.JComboBox CBEstado202;
    private javax.swing.JComboBox CBEstado203;
    private javax.swing.JComboBox CBEstado204;
    private javax.swing.JComboBox CBEstado205;
    private javax.swing.JComboBox CBEstado206;
    private javax.swing.JComboBox CBEstado207;
    private javax.swing.JComboBox CBEstado208;
    private javax.swing.JComboBox CBEstado209;
    private javax.swing.JComboBox CBEstado301;
    private javax.swing.JComboBox CBEstado302;
    private javax.swing.JComboBox CBEstado303;
    private javax.swing.JComboBox CBEstado304;
    private javax.swing.JComboBox CBEstado305;
    private javax.swing.JComboBox CBEstado306;
    private javax.swing.JComboBox CBEstado307;
    private javax.swing.JComboBox CBEstado308;
    private javax.swing.JComboBox CBEstado309;
    private javax.swing.JComboBox CBEstado401;
    private javax.swing.JComboBox CBEstado402;
    private javax.swing.JComboBox CBEstado403;
    private javax.swing.JComboBox CBEstado404;
    private javax.swing.JComboBox CBEstado405;
    private javax.swing.JComboBox CBEstado406;
    private javax.swing.JComboBox CBEstado407;
    private javax.swing.JComboBox CBEstado408;
    private javax.swing.JComboBox CBEstado409;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator17;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator jSeparator21;
    private javax.swing.JSeparator jSeparator22;
    private javax.swing.JSeparator jSeparator23;
    private javax.swing.JSeparator jSeparator24;
    private javax.swing.JSeparator jSeparator25;
    private javax.swing.JSeparator jSeparator26;
    private javax.swing.JSeparator jSeparator27;
    private javax.swing.JSeparator jSeparator28;
    private javax.swing.JSeparator jSeparator29;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator30;
    private javax.swing.JSeparator jSeparator31;
    private javax.swing.JSeparator jSeparator32;
    private javax.swing.JSeparator jSeparator33;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panel101;
    private javax.swing.JPanel panel102;
    private javax.swing.JPanel panel103;
    private javax.swing.JPanel panel104;
    private javax.swing.JPanel panel105;
    private javax.swing.JPanel panel106;
    private javax.swing.JPanel panel107;
    private javax.swing.JPanel panel108;
    private javax.swing.JPanel panel109;
    private javax.swing.JPanel panel201;
    private javax.swing.JPanel panel202;
    private javax.swing.JPanel panel203;
    private javax.swing.JPanel panel204;
    private javax.swing.JPanel panel205;
    private javax.swing.JPanel panel206;
    private javax.swing.JPanel panel207;
    private javax.swing.JPanel panel208;
    private javax.swing.JPanel panel209;
    private javax.swing.JPanel panel301;
    private javax.swing.JPanel panel302;
    private javax.swing.JPanel panel303;
    private javax.swing.JPanel panel304;
    private javax.swing.JPanel panel305;
    private javax.swing.JPanel panel306;
    private javax.swing.JPanel panel307;
    private javax.swing.JPanel panel308;
    private javax.swing.JPanel panel309;
    private javax.swing.JPanel panel401;
    private javax.swing.JPanel panel402;
    private javax.swing.JPanel panel403;
    private javax.swing.JPanel panel404;
    private javax.swing.JPanel panel405;
    private javax.swing.JPanel panel406;
    private javax.swing.JPanel panel407;
    private javax.swing.JPanel panel408;
    private javax.swing.JPanel panel409;
    // End of variables declaration//GEN-END:variables
}
